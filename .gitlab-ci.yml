include:
  - local: 'ci/setup-dkml/gl/setup-dkml.gitlab-ci.yml'

variables:
  # We need the secondary switch ('two') to install dkml-build-desktop.opam
  SECONDARY_SWITCH: 'true'
  # Set to 'true' when you only want do the DKML setup but not the build-test
  # and not the release. Good for populating the cache.
  SETUP_ONLY: 'false'

build_linux:
  timeout: 2h
  script:
    - |
      if [ "$SETUP_ONLY" = "true" ]; then
        echo 'SKIPPING BUILD since SETUP_ONLY=true'
      else
        sh ci/build-test.sh ci
      fi

build_win32:
  timeout: 3h
  script:
    - |
      if ("$env:SETUP_ONLY" -eq "true") {
        Write-Host "SKIPPING BUILD since SETUP_ONLY=true"
      } else {
        msys64\usr\bin\bash -lc "ci/build-test.sh ci"
      }

# Uncomment macOS when you have a https://gitlab.com/gitlab-com/runner-saas-macos-access-requests/-/issues
# approved!
#
# build_macos:
#   timeout: 2h
#   script:
#     - |
#       if [ "$SETUP_ONLY" = "true" ]; then
#         echo 'SKIPPING BUILD since SETUP_ONLY=true'
#       else
#         sh ci/build-test.sh ci
#       fi

release:
  stage: deploy
  image: alpine
  except:
    variables:
      - $SETUP_ONLY = "true"
  script:
    - apk add jq rsync curl

    # Make _release
    - ci/prepare-release.sh
    
    # Create public packages
    - |
      if [ -z "$CI_COMMIT_TAG" ]; then
        PKGTAG="$CI_COMMIT_BRANCH"
      elif [ -n "$CI_COMMIT_TAG" ]; then
        PKGTAG=$(echo "$CI_COMMIT_TAG" | sed 's/^v//')
      else
        PKGTAG="$CI_COMMIT_SHORT_SHA"
      fi

    - CI_PROJECT_PATH_URLENCODED=$(printf %s "$CI_PROJECT_PATH" | jq -s -R -r @uri) # Must be url-encoded per https://docs.gitlab.com/ee/user/packages/generic_packages/
    - PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/$CI_PROJECT_PATH_URLENCODED/packages/generic/$THE_EXECUTABLE_NAME/$PKGTAG"
    - echo $PACKAGE_REGISTRY_URL
    - |
      GLAB_CURL_HEADER="JOB-TOKEN: ${CI_JOB_TOKEN}"
      find _release -mindepth 1 -maxdepth 1 -type f | while read -r releasefile; do
        curl --fail --header "$GLAB_CURL_HEADER" --upload-file "_release/$releasefile" "$PACKAGE_REGISTRY_URL/$releasefile"
      done

